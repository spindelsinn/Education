# input and open file
input Get data from the “outside world”. This might be reading data from a ﬁle, or even some kind of sensor like a microphone or GPS. In our initial programs, our input will come from the user typing data on the keyboard.
output Display the results of the program on a screen or store them in a ﬁle or perhaps write them to a device like a speaker to play music or speak text.
name = input('Enter file:') 

fout = open('output.txt', 'w')
fout.write(line1)
fout.close()

a=[1,2,3] -list

type(x) - what type a value has  

 //  % - modulus operator
 
 x is y # x is the same as y 
 x is not y # x is not the same as y

try:
  fahr = float(inp) 
except: 
  print('Please enter a number')
  
max(), min(), len() 
int(), float(), str()
>>> 'a' in 'banana' 
True 

The dir() method tries to return a list of valid attributes of the object. If empty - list of local variables.

import random
random.random() -  returns a random ﬂoat between 0.0 and 1.0 (including 0.0 but not 1.0)
random.randint(5, 10) -returns int between 5 and 10
random.choice(t) -To choose an element from a sequence at random. Example t=[1,2,3] or just a string
random.randrange(10,20,2) - 2 is a step in range from 10 to 20.
random.shuffle(r) - shuffle elements r is a range. Output is [0, 4, 1, 6, 8, 3, 2, 5, 9, 7] 
random.sample(range(50),10) - take 10 elements from 0 to 50. Output [22, 29, 30, 14, 16, 17, 32, 48, 2, 19] 

import math
pow(num, power): возведение числа num в степень power
sqrt(num): квадратный корень числа num
ceil(num): округление числа до ближайшего наибольшего целого
floor(num): округление числа до ближайшего наименьшего целого
factorial(num): факториал числа
degrees(rad): перевод из радиан в градусы
radians(grad): перевод из градусов в радианы
cos(rad): косинус угла в радианах
sin(rad): синус угла в радианах
tan(rad): тангенс угла в радианах
acos(rad): арккосинус угла в радианах
asin(rad): арксинус угла в радианах
atan(rad): арктангенс угла в радианах
log(n, base): логарифм числа n по основанию base
log10(n): десятичный логарифм числа n

String methods
capitalize(): Converts first character to Capital Letter 
center():Pads string with specified character (stringshifting, can be filled)
casefold():converts to casefolded strings (to small letters)
count():returns occurrences of substring in string (find word)
endswith():Checks if String Ends with the Specified Suffix 
expandtabs():Replaces Tab character With Spaces 
encode():returns encoded string of given string 
find():Returns the Highest Index of Substring (count letters not words, can be rfind(fron right edge))
format():formats string into nicer output 
index():Returns Index of Substring(just find in string) 
isalnum(): if not letters or numbers -> error  
isalpha():Checks if All Characters are Alphabets 
isdecimal():Checks Decimal Characters 
isdigit():Checks Digit Characters 
isidentifier():Checks is it good identifier for Python?(no spaces or no starts with numbers)
islower():Checks if all Alphabets in a String are Lowercase 
isnumeric():is it Numeric Characters? 
isprintable():Characters that occupies printing space on the screen-printable characters(letters and symbols digits punctuation whitespace)
isspace():Checks Whitespace Characters 
istitle():Checks for Titlecased String 
isupper():returns if all characters are uppercase characters 
join():Returns a Concatenated String 
ljust(width,fill):returns left-justified string of given width(for constant width of strings) 
rjust(width,fill):returns right-justified string of given width(for constant width of strings) 
lower():returns lowercased string 
upper():returns uppercased string 
swapcase():swap uppercase characters to lowercase; vice versa 
lstrip():Removes Characters or spaces from left 
rstrip():Removes Characters or spaces from right
strip():Removes Characters or spaces from left and right 
partition():Returns a Tuple with 3 elemets 1- before separator, separator and after separator 
maketrans():returns a translation table or connect strings to a dictionary
rpartition():same as partition() but start search from right 
translate(): translate with table which was created by maketrans() 
str.replace(old, new [, count]) :Replaces Substring Inside 
str.rfind(sub[, start[, end]] ):Returns the Highest Index of Substring 
str.rindex(sub[, start[, end]] ) :Returns Highest Index of Substring 
str.split([separator [, maxsplit]]):Splits String from Left 
str.rsplit([separator [, maxsplit]]):Splits String From Right 
str.splitlines([keepends]): spit by lines and ret list
str.startswith(prefix[, start[, end]]):Checks if String Starts with the Specified String 
str.title(): returns a string with first letter of each word capitalized 
str.zfill(width):returns a copy of the string with '0' characters padded to the left. 
format_map() similar to str.format(**mapping) except that str.format(**mapping) creates a new dictionary whereas str.format_map(mapping) doesn't

List methods
list.append (element) - add to list
list.insert(<position, element) - Inserts an elements at specified position
List1.extend(List2) - add list2 to list1
sum(List) - Calculates sum of all the elements of List
List.count(element) - how many times element in List
len(list_name) - Calculates total length of List
List.index(element[,start[,end]]) - Returns the index of first element. Start and End index are not necessary parameters
min(List) - smallest element in list
max(List) - biggest element in list
List.sort(reverse=True) - sorting
list.pop([index]) - takes one element
del list.[index] - delete element by index
list.remove(element) - delete by name or value
list.clear - clear



============================================================================================
any():Checks if any Element of an Iterable is True 
all():returns true when all elements in iterable is true 
ascii():Returns String Containing Printable Representation 
bool():Coverts a Value to Boolean 
bytearray():returns array of given byte size 
bytes():returns immutable bytes object 
compile():Returns a Python code object 
complex():Creates a Complex Number 
enumerate():Returns an Enumerate Object 
filter():constructs iterator from elements which are true 
Python float() 
returns floating point number from number, string 
Python input() 
reads and returns a line of string 
Python int() 
returns integer from a number or string 
Python iter() 
returns iterator for an object 
Python len() 
Returns Length of an Object 
Python max() 
returns largest element 
Python min() 
returns smallest element 
Python map() 
Applies Function and Returns a List 
Python ord() 
returns Unicode code point for Unicode character 
Python reversed() 
returns reversed iterator of a sequence 
Python slice() 
creates a slice object specified by range() 
Python sorted() 
returns sorted list from a given iterable 
Python sum() 
Add items of an Iterable 
Python zip() 
Returns an Iterator of Tuples 
